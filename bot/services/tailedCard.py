from bot.services.cardBase import Card

class TailedBeastCard(Card):
    def special_skills(self):
        logs: list[str] = []
        logs.append(f"{self.name} k√≠ch ho·∫°t k·ªπ nƒÉng Bom vƒ© th√∫! üí•")

        # L·∫•y danh s√°ch k·∫ª ƒë·ªãch c√≤n s·ªëng
        alive_enemies = [c for c in self.enemyTeam if c.is_alive()]
        damage = int(self.base_damage * 2)

        # X√°c ƒë·ªãnh ph·∫ßn trƒÉm gi·∫£m gi√°p theo tier (1vi -> 5%, 2vi -> 10%, ...)
        try:
            count = int(self.tier.replace("vi", ""))
            armor_reduction_percent = count * 0.05
        except Exception:
            armor_reduction_percent = 0.0

        # √Åp d·ª•ng s√°t th∆∞∆°ng v√† gi·∫£m gi√°p cho t·∫•t c·∫£ k·∫ª ƒë·ªãch
        for target in alive_enemies:
            # T√≠nh s√°t th∆∞∆°ng c√≥ x√©t gi√°p
            dealt = max(damage - target.armor, 0)
            target.health -= dealt
            if target.health < 0:
                target.health = 0
            logs.append(
                f"üí• {target.name} nh·∫≠n {dealt} s√°t th∆∞∆°ng t·ª´ bom vƒ© th√∫!"
            )

            # Gi·∫£m gi√°p theo ph·∫ßn trƒÉm
            reduction_amount = int(target.armor * armor_reduction_percent)
            target.armor = max(target.armor - reduction_amount, 0)
            logs.append(
                f"üõ°Ô∏è Gi·∫£m gi√°p c·ªßa {target.name} ƒëi {int(armor_reduction_percent*100)}% ({reduction_amount})."
            )

        return logs
