from bot.services.cardBase import Card
from bot.services.effect.buffArmorEffect import BuffArmorEffect
from bot.services.effect.stunEffect import StunEffect

class Kisame(Card):
    def special_skills(self):
        logs: list[str] = []
        logs.append(f"üíß {self.name} s·ª≠ d·ª•ng Th·ªßy Ng·ª•c, tr√≥i ch√¢n tuy·∫øn ƒë·∫ßu ƒë·ªãch v√† gia tƒÉng gi√°p b·∫£n th√¢n!")

        # 1Ô∏è‚É£ Tr√≥i ch√¢n tuy·∫øn ƒë·∫ßu ƒë·ªãch (stun) trong 3 l∆∞·ª£t
        front = next((c for c in self.enemyTeam if c.is_alive()), None)
        if front:
            stun = StunEffect(
                duration=3,
                description="Th·ªßy Ng·ª•c c·ªßa Kisame"
            )
            front.effects.append(stun)
            logs.append(f"‚ö° {front.name} b·ªã m·∫•t 3 l∆∞·ª£t!")
        else:
            logs.append("‚ùå Kh√¥ng t√¨m th·∫•y m·ª•c ti√™u tuy·∫øn ƒë·∫ßu ƒë·ªÉ tr√≥i ch√¢n.")

        # 2Ô∏è‚É£ TƒÉng gi√°p b·∫£n th√¢n b·∫±ng 200% SMKK trong 2 l∆∞·ª£t
        flat_bonus = int(self.get_effective_base_damage() * 2)
        armor_buff = BuffArmorEffect(
            duration=2,
            value=0,  # kh√¥ng d√πng % gi√°p hi·ªán t·∫°i
            flat_bonus=flat_bonus,
            description="Gi√°p Th·ªßy Ng·ª•c c·ªßa Kisame"
        )
        self.effects.append(armor_buff)
        logs.append(f"üõ°Ô∏è {self.name} nh·∫≠n buff +{flat_bonus} gi√°p trong 2 l∆∞·ª£t (200% SMKK).")

        return logs
