from bot.services.cardBase import Card
from bot.services.effect.immuneEffect import ImmuneEffect

class SenjuTobirama(Card):
    def special_skills(self):
        logs: list[str] = []
        logs.append(f"‚öîÔ∏è {self.name} s·ª≠ d·ª•ng C·∫•m Thu·∫≠t: c√†n qu√©t k·∫ª ƒë·ªãch v√† t·ª± b·∫£o h·ªô!")

        # 1Ô∏è‚É£ G√¢y 400% s√°t th∆∞∆°ng c∆° b·∫£n l√™n to√†n b·ªô k·∫ª ƒë·ªãch
        damage = int(self.get_effective_base_damage() * 4)
        alive_enemies = [c for c in self.enemyTeam if c.is_alive()]
        if not alive_enemies:
            logs.append("‚ùå Kh√¥ng c√≥ k·∫ª ƒë·ªãch n√†o ƒë·ªÉ t·∫•n c√¥ng.")
        else:
            for target in alive_enemies:
                dealt, dmg_logs = target.receive_damage(
                    damage,
                    true_damage=False,
                    execute_threshold=None,
                    attacker=self
                )
                logs.extend(dmg_logs)

        # 2Ô∏è‚É£ Gi·∫£i tr·ª´ m·ªçi hi·ªáu ·ª©ng b·∫•t l·ª£i tr√™n b·∫£n th√¢n
        expired_logs = []
        new_effects = []
        for effect in self.effects:
            if effect.effect_type == 'debuff':
                # g·ªçi on_expire ƒë·ªÉ ch·∫°y cleanup (v√≠ d·ª• IllusionEffect s·∫Ω swap back)
                expired_logs.extend(effect.on_expire(self))
            else:
                new_effects.append(effect)

        self.effects = new_effects

        for log in expired_logs:
            logs.append(f"‚ùé {log}")

        # 3Ô∏è‚É£ Phong ·∫•n mi·ªÖn nhi·ªÖm s√°t th∆∞∆°ng trong 3 l∆∞·ª£t
        immune = ImmuneEffect(duration=3, description="Mi·ªÖn nhi·ªÖm s√°t th∆∞∆°ng t·ª´ C·∫•m Thu·∫≠t c·ªßa Tobirama")
        self.effects.append(immune)
        logs.append(f"üõ°Ô∏è {self.name} ƒë∆∞·ª£c mi·ªÖn nhi·ªÖm s√°t th∆∞∆°ng trong 3 l∆∞·ª£t t·ªõi!")

        return logs
