from bot.services.cardBase import Card
from bot.services.effect.deBuffArmorEffect import DebuffArmorEffect
from bot.services.effect.deBuffCritEffect import DebuffCritEffect
from bot.services.effect.deBuffDamageEffect import DebuffDamageEffect
from bot.services.effect.deBuffSpeedEffect import DebuffSpeedEffect

class Onoki(Card):
    def special_skills(self):
        logs: list[str] = []
        logs.append(f"ü™® {self.name} tung Tr·∫ßn ƒê·ªôn, c√†n qu√©t to√†n b·ªô k·∫ª ƒë·ªãch v√† suy y·∫øu!")

        # 1Ô∏è‚É£ G√¢y 200% s√°t th∆∞∆°ng c∆° b·∫£n l√™n t·∫•t c·∫£ k·∫ª ƒë·ªãch
        damage = int(self.get_effective_base_damage() * 2)
        alive_enemies = [c for c in self.enemyTeam if c.is_alive()]

        if not alive_enemies:
            logs.append("‚ùå Kh√¥ng c√≥ k·∫ª ƒë·ªãch n√†o ƒë·ªÉ t·∫•n c√¥ng.")
            return logs

        # 2Ô∏è‚É£ √Åp d·ª•ng s√°t th∆∞∆°ng v√† gi·∫£m 50% to√†n b·ªô ch·ªâ s·ªë trong 2 l∆∞·ª£t
        duration = 2
        for target in alive_enemies:
            dealt, dmg_logs = target.receive_damage(
                damage,
                true_damage=False,
                execute_threshold=None,
                attacker=self
            )
            logs.extend(dmg_logs)

            # Gi·∫£m gi√°p
            armor_debuff = DebuffArmorEffect(
                duration=duration,
                value=0.5,
                description="Gi·∫£m gi√°p t·ª´ Tr·∫ßn ƒê·ªôn c·ªßa Onoki"
            )
            target.effects.append(armor_debuff)
            logs.append(f"üõ°Ô∏è {target.name} b·ªã gi·∫£m 50% gi√°p trong {duration} l∆∞·ª£t!")

            # Gi·∫£m ch√≠ m·∫°ng
            crit_debuff = DebuffCritEffect(
                duration=duration,
                value=0.5,
                description="Gi·∫£m ch√≠ m·∫°ng t·ª´ Tr·∫ßn ƒê·ªôn c·ªßa Onoki"
            )
            target.effects.append(crit_debuff)
            logs.append(f"üí• {target.name} b·ªã gi·∫£m 50% ch√≠ m·∫°ng trong {duration} l∆∞·ª£t!")

            # Gi·∫£m s√°t th∆∞∆°ng c∆° b·∫£n
            damage_debuff = DebuffDamageEffect(
                duration=duration,
                value=0.5,
                description="Gi·∫£m s√°t th∆∞∆°ng t·ª´ Tr·∫ßn ƒê·ªôn c·ªßa Onoki"
            )
            target.effects.append(damage_debuff)
            logs.append(f"‚öîÔ∏è {target.name} b·ªã gi·∫£m 50% s√°t th∆∞∆°ng trong {duration} l∆∞·ª£t!")

            # Gi·∫£m t·ªëc ƒë·ªô
            speed_debuff = DebuffSpeedEffect(
                duration=duration,
                value=0.5,
                description="Gi·∫£m t·ªëc ƒë·ªô t·ª´ Tr·∫ßn ƒê·ªôn c·ªßa Onoki"
            )
            target.effects.append(speed_debuff)
            logs.append(f"üèÉ {target.name} b·ªã gi·∫£m 50% t·ªëc ƒë·ªô trong {duration} l∆∞·ª£t!")

        return logs
