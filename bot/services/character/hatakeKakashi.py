from bot.services.cardBase import Card
from bot.services.effect.deBuffArmorEffect import DebuffArmorEffect

class HatakeKakashi(Card):
    def special_skills(self):
        logs: list[str] = []
        logs.append(f"‚ö°Ô∏è {self.name} s·ª≠ d·ª•ng Chidori C·ª±c M·∫°nh: c√†n qu√©t to√†n b·ªô k·∫ª ƒë·ªãch v·ªõi s√°t th∆∞∆°ng chu·∫©n!")

        # T√≠nh 800% s√°t th∆∞∆°ng c∆° b·∫£n
        damage = int(self.get_effective_base_damage() * 5)
        alive_enemies = [c for c in self.enemyTeam if c.is_alive()]

        if not alive_enemies:
            logs.append("‚ùå Kh√¥ng c√≥ k·∫ª ƒë·ªãch n√†o ƒë·ªÉ t·∫•n c√¥ng.")
            return logs

        for target in alive_enemies:
            # 1Ô∏è‚É£ G√¢y s√°t th∆∞∆°ng chu·∫©n (b·ªè qua gi√°p)
            dealt, dmg_logs = target.receive_damage(
                damage,
                true_damage=True,
                execute_threshold=None,
                attacker=self
            )
            logs.extend(dmg_logs)

            # 2Ô∏è‚É£ Ph√° gi√°p 80% trong 2 l∆∞·ª£t
            armor_debuff = DebuffArmorEffect(
                duration=2,
                value=0.8,  # gi·∫£m 80% gi√°p
                description=f"Ph√° gi√°p t·ª´ Chidori c·ªßa {self.name}"
            )
            target.effects.append(armor_debuff)
            logs.append(f"üõ°Ô∏è {target.name} b·ªã gi·∫£m 80% gi√°p trong 2 l∆∞·ª£t!")

        return logs
