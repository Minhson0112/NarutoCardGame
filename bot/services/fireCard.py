from bot.services.cardBase import Card
from bot.services.effectBase import Effect
class FireCard(Card):
    def special_skills(self):
        logs: list[str] = []
        logs.append(f"{self.name} k√≠ch ho·∫°t k·ªπ nƒÉng ƒë·∫∑c bi·ªát h·ªá H·ªèa! üî•")

        alive_enemies = [c for c in self.enemyTeam if c.is_alive()]
        damage = int(self.get_effective_base_damage * 5)
        
        if self.tier == "Genin":
            # T·∫•n c√¥ng h√†ng ƒë·∫ßu ti√™n c√≤n s·ªëng
            for i in range(3):
                if self.enemyTeam[i].is_alive():
                    target = self.enemyTeam[i]
                    dealt, new_logs = target.receive_damage(damage)
                    logs.extend(new_logs)
                    break

        elif self.tier == "Chunin":
            # T·∫•n c√¥ng 2 k·∫ª ƒë·ªãch ƒë·∫ßu ti√™n c√≤n s·ªëng
            targets = alive_enemies[:2]
            for target in targets:
                dealt, new_logs = target.receive_damage(damage)
                logs.extend(new_logs)

        elif self.tier == "Jounin":
            # T·∫•n c√¥ng to√†n b·ªô k·∫ª ƒë·ªãch c√≤n s·ªëng
            for target in alive_enemies:
                dealt, new_logs = target.receive_damage(damage)
                logs.extend(new_logs)

        elif self.tier == "Kage":
            # S√°t th∆∞∆°ng chu·∫©n: b·ªè qua gi√°p
            for target in alive_enemies:
                dealt, new_logs = target.receive_damage(damage, true_damage=True)
                logs.extend(new_logs)

        elif self.tier == "Legendary":
            for target in alive_enemies:
                # G√¢y s√°t th∆∞∆°ng chu·∫©n
                dealt, new_logs = target.receive_damage(damage, true_damage=True)
                logs.extend(new_logs)
                
                # Gi·∫£m gi√°p 30%
                armor_logs = target.reduce_armor_direct(percent_reduce=0.3)
                logs.extend(armor_logs)

        else:
            logs.append(f"{self.name} kh√¥ng c√≥ k·ªπ nƒÉng ƒë·∫∑c bi·ªát ph√π h·ª£p.")

        return logs
