import discord
from discord.ext import commands
from discord import app_commands

from bot.config.database import getDbSession
from bot.repository.playerRepository import PlayerRepository

class Top10(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @app_commands.command(name="top10", description="L·∫•y b·∫£ng x·∫øp h·∫°ng Top 10 theo ƒëi·ªÉm rank hi·ªán t·∫°i")
    async def top10(self, interaction: discord.Interaction):
        await interaction.response.defer(thinking=True)
        try:
            with getDbSession() as session:
                playerRepo = PlayerRepository(session)
                # L·∫•y danh s√°ch Top 10 ng∆∞·ªùi ch∆°i theo ƒëi·ªÉm rank gi·∫£m d·∫ßn
                topPlayers = playerRepo.getTop10()
                # X√°c ƒë·ªãnh th·ª© h·∫°ng c·ªßa ng∆∞·ªùi d√πng g·ªçi l·ªánh
                myRank = playerRepo.getPlayerRank(interaction.user.id)

                # X√¢y d·ª±ng chu·ªói b·∫£ng x·∫øp h·∫°ng v·ªõi emoji trang tr√≠
                scoreboard = ""
                for idx, player in enumerate(topPlayers, start=1):
                    scoreboard += f"üèÜ **{idx}. {player.username}** - {player.rank_points} ƒëi·ªÉm\n"

            embed = discord.Embed(
                title="BXH ƒêi·ªÉm Rank Top 10 üî•",
                description=scoreboard,
                color=discord.Color.blue()
            )
            if myRank:
                embed.set_footer(text=f"üåü Rank c·ªßa b·∫°n: {myRank}")
            else:
                embed.set_footer(text="‚ùó B·∫°n ch∆∞a c√≥ ƒëi·ªÉm rank.")

            await interaction.followup.send(embed=embed)
        except Exception as e:
            print("‚ùå L·ªói khi x·ª≠ l√Ω /top10:", e)
            await interaction.followup.send("‚ùå C√≥ l·ªói x·∫£y ra. Vui l√≤ng th·ª≠ l·∫°i sau.")

async def setup(bot):
    await bot.add_cog(Top10(bot))
