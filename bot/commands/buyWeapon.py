import discord
from discord.ext import commands
from discord import app_commands
import random
from sqlalchemy import func

from bot.config.database import getDbSession
from bot.repository.playerRepository import PlayerRepository
from bot.repository.weaponTemplateRepository import WeaponTemplateRepository
from bot.repository.playerWeaponRepository import PlayerWeaponRepository
from bot.services.playerService import PlayerService
from bot.config.weaponGachaConfig import WEAPON_GACHA_PRICES, WEAPON_GACHA_DROP_RATE, WEAPON_GACHA_PACKS
from bot.config.imageMap import WEAPON_IMAGE_MAP  # mapping ·∫£nh v≈© kh√≠
from bot.entity.weaponTemplate import WeaponTemplate

class BuyWeapon(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @app_commands.command(name="buyweapon", description="Mua g√≥i m·ªü v≈© kh√≠ v√† m·ªü h·ªôp ngay l·∫≠p t·ª©c")
    @app_commands.describe(
        pack="T√™n g√≥i m·ªü v≈© kh√≠ (v√≠ d·ª•: weapon_pack)"
    )
    async def buyWeapon(self, interaction: discord.Interaction, pack: str):
        await interaction.response.defer(thinking=True)
        playerId = interaction.user.id

        try:
            with getDbSession() as session:
                # Kh·ªüi t·∫°o c√°c repository c·∫ßn thi·∫øt
                playerRepo = PlayerRepository(session)
                weaponTemplateRepo = WeaponTemplateRepository(session)
                playerWeaponRepo = PlayerWeaponRepository(session)
                playerService = PlayerService(playerRepo)

                # Ki·ªÉm tra t√†i kho·∫£n ng∆∞·ªùi ch∆°i
                player = playerRepo.getById(playerId)
                if not player:
                    await interaction.followup.send("‚ö†Ô∏è B·∫°n ch∆∞a ƒëƒÉng k√Ω t√†i kho·∫£n. H√£y d√πng `/register` tr∆∞·ªõc nh√©!")
                    return

                # Ki·ªÉm tra g√≥i m·ªü v≈© kh√≠ h·ª£p l·ªá
                if pack not in WEAPON_GACHA_PRICES:
                    validPacks = ", ".join(WEAPON_GACHA_PRICES.keys())
                    await interaction.followup.send(f"‚ùå G√≥i '{pack}' kh√¥ng h·ª£p l·ªá. Vui l√≤ng ch·ªçn: {validPacks}")
                    return

                # T√≠nh chi ph√≠ cho 1 l∆∞·ª£t m·ªü g√≥i v≈© kh√≠
                cost = WEAPON_GACHA_PRICES[pack]
                if player.coin_balance < cost:
                    await interaction.followup.send(f"‚ùå S·ªë d∆∞ kh√¥ng ƒë·ªß. C·∫ßn {cost:,} Ryo, hi·ªán c√≥ {player.coin_balance:,} Ryo.")
                    return

                # Tr·ª´ ti·ªÅn
                playerService.addCoin(playerId, -cost)

                # Roll ng·∫´u nhi√™n theo weighted random d·ª±a tr√™n t·ªâ l·ªá drop c·ªßa g√≥i weapon
                rates = WEAPON_GACHA_DROP_RATE[pack]
                tiers = list(rates.keys())
                weights = list(rates.values())
                outcomeTier = random.choices(tiers, weights=weights, k=1)[0]

                # L·∫•y ng·∫´u nhi√™n m·ªôt weapon template theo grade (outcomeTier)
                weapon = weaponTemplateRepo.getRandomByGrade(outcomeTier)
                if not weapon:
                    await interaction.followup.send("‚ùå L·ªói khi m·ªü h·ªôp, kh√¥ng t√¨m th·∫•y v≈© kh√≠ ph√π h·ª£p.")
                    return

                # Th√™m v≈© kh√≠ v√†o kho c·ªßa ng∆∞·ªùi ch∆°i
                playerWeaponRepo.incrementQuantity(playerId, weapon.weapon_key, increment=1)

                # L·∫•y URL ·∫£nh th·ª±c t·ª´ WEAPON_IMAGE_MAP (weapon.image_url l∆∞u key)
                imageUrl = WEAPON_IMAGE_MAP.get(weapon.image_url, weapon.image_url)

                # T·∫°o embed hi·ªÉn th·ªã th√¥ng tin c·ªßa v≈© kh√≠ nh·∫≠n ƒë∆∞·ª£c
                embed = discord.Embed(
                    title=f"üéâ B·∫°n ƒë√£ mua g√≥i {pack} v√† m·ªü ƒë∆∞·ª£c v≈© kh√≠: {weapon.name}",
                    description=(
                        f"**Bonus Power:** {weapon.bonus_power}\n"
                        f"**B√¢Ã£c:** {weapon.grade}\n"
                        f"**Gi√° b√°n:** {weapon.sell_price:,} Ryo\n\n"
                        f"V≈© kh√≠ ƒë√£ ƒë∆∞·ª£c th√™m v√†o kho c·ªßa b·∫°n. Ki·ªÉm tra kho b·∫±ng l·ªánh `/inventory`."
                    ),
                    color=discord.Color.green()
                )
                embed.set_image(url=imageUrl)
                await interaction.followup.send(embed=embed)
        except Exception as e:
            print("‚ùå L·ªói khi x·ª≠ l√Ω buyweapon:", e)
            await interaction.followup.send("‚ùå C√≥ l·ªói x·∫£y ra. Vui l√≤ng th·ª≠ l·∫°i sau.")

async def setup(bot):
    await bot.add_cog(BuyWeapon(bot))
