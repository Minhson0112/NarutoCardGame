import discord
from discord.ext import commands
from discord import app_commands
import random
import asyncio

from bot.config.database import getDbSession
from bot.repository.playerRepository import PlayerRepository
from bot.repository.dailyTaskRepository import DailyTaskRepository

class Slot(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        # Danh s√°ch c√°c emoji cho m√°y slot ‚Äì b·∫°n c√≥ th·ªÉ m·ªü r·ªông th√™m theo mong mu·ªën
        self.slot_emojis = ["üçí", "üçã", "üçä", "üçá", "üçâ", "‚≠ê", "üíé"]

    @app_commands.command(name="slot", description="Ch∆°i m√°y slot ƒë·ªÉ tr√∫ng th∆∞·ªüng üé∞")
    @app_commands.describe(bet="S·ªë ti·ªÅn c∆∞·ª£c b·∫°n mu·ªën ƒë·∫∑t (Ryo)")
    async def slot(self, interaction: discord.Interaction, bet: int):
        # T·∫°m ho√£n ph·∫£n h·ªìi ban ƒë·∫ßu ƒë·ªÉ x·ª≠ l√Ω logic l√¢u h∆°n
        await interaction.response.defer(thinking=True)
        player_id = interaction.user.id

        try:
            with getDbSession() as session:
                # Ki·ªÉm tra th√¥ng tin ng∆∞·ªùi ch∆°i v√† s·ªë d∆∞
                playerRepo = PlayerRepository(session)
                dailyTaskRepo = DailyTaskRepository(session)
                player = playerRepo.getById(player_id)
                if not player:
                    await interaction.followup.send("‚ö†Ô∏è B·∫°n ch∆∞a ƒëƒÉng k√Ω t√†i kho·∫£n. H√£y d√πng /register tr∆∞·ªõc nh√©!")
                    return
                if bet <= 0:
                    await interaction.followup.send("‚ö†Ô∏è S·ªë ti·ªÅn c∆∞·ª£c ph·∫£i l·ªõn h∆°n 0.")
                    return
                if bet > 1000000:
                    await interaction.followup.send("‚ö†Ô∏è S·ªë ti·ªÅn c∆∞·ª£c kh√¥ng ƒë∆∞∆°Ã£c quaÃÅ 1m.")
                    return
                if player.coin_balance < bet:
                    await interaction.followup.send("‚ö†Ô∏è S·ªë d∆∞ c·ªßa b·∫°n kh√¥ng ƒë·ªß.")
                    return
                
                dailyTaskRepo.updateMinigame(player_id)
                # Random ra 3 emoji (3 ngƒÉn quay)
                outcome = [random.choice(self.slot_emojis) for _ in range(3)]
                unique_count = len(set(outcome))
                if unique_count == 1:
                    multiplier = 10
                elif unique_count == 2:
                    multiplier = 2
                else:
                    multiplier = 0

                # G·ª≠i th√¥ng b√°o ban ƒë·∫ßu
                initial_embed = discord.Embed(
                    title="üé∞ M√°y Slot üé∞",
                    description=f"üí∞ Ti·ªÅn c∆∞·ª£c: **{bet} Ryo**\nüéÆ ƒêang quay th∆∞·ªüng...",
                    color=discord.Color.gold()
                )
                msg = await interaction.followup.send(embed=initial_embed)

                # C·∫≠p nh·∫≠t 1: Hi·ªÉn th·ªã emoji th·ª© nh·∫•t
                await asyncio.sleep(0.5)
                embed_step1 = discord.Embed(
                    title="üé∞ M√°y Slot üé∞",
                    description=f"{outcome[0]}",
                    color=discord.Color.gold()
                )
                await msg.edit(embed=embed_step1)

                # C·∫≠p nh·∫≠t 2: Hi·ªÉn th·ªã emoji th·ª© nh·∫•t v√† th·ª© hai
                await asyncio.sleep(0.5)
                embed_step2 = discord.Embed(
                    title="üé∞ M√°y Slot üé∞",
                    description=f"{outcome[0]} | {outcome[1]}",
                    color=discord.Color.gold()
                )
                await msg.edit(embed=embed_step2)

                # C·∫≠p nh·∫≠t 3: Hi·ªÉn th·ªã ƒë·ªß 3 emoji
                await asyncio.sleep(0.5)
                embed_step3 = discord.Embed(
                    title="üé∞ M√°y Slot üé∞",
                    description=f"{outcome[0]} | {outcome[1]} | {outcome[2]}",
                    color=discord.Color.gold()
                )
                await msg.edit(embed=embed_step3)

                # Ch·ªù th√™m m·ªôt ch√∫t ƒë·ªÉ ƒë·∫£m b·∫£o ng∆∞·ªùi d√πng c√≥ th·ªÉ theo d√µi qu√° tr√¨nh hi·ªÉn th·ªã
                await asyncio.sleep(1)

                # X·ª≠ l√Ω k·∫øt qu·∫£ v√† c·∫≠p nh·∫≠t s·ªë d∆∞ c·ªßa ng∆∞·ªùi ch∆°i
                if multiplier > 0:
                    reward = bet * multiplier
                    if multiplier == 10:
                        outcome_text = (
                            f"ü•≥ Ch√∫c m·ª´ng! M√°y Slot ra: **{' | '.join(outcome)}**.\n"
                            f"B·∫°n tr√∫ng jackpot, nh·∫≠n th∆∞·ªüng **{reward} Ryo** (C∆∞·ª£c x10)."
                        )
                    else:
                        outcome_text = (
                            f"üòä Ch√∫c m·ª´ng! M√°y Slot ra: **{' | '.join(outcome)}**.\n"
                            f"B·∫°n tr√∫ng th∆∞·ªüng, nh·∫≠n th∆∞·ªüng **{reward} Ryo** (C∆∞·ª£c x2)."
                        )
                    player.coin_balance = player.coin_balance - bet + reward
                    final_color = discord.Color.green()
                else:
                    outcome_text = (
                        f"üò¢ R·∫•t ti·∫øc! M√°y Slot ra: **{' | '.join(outcome)}**.\n"
                        f"B·∫°n th·∫•t b·∫°i, m·∫•t h·∫øt s·ªë ti·ªÅn c∆∞·ª£c (**{bet} Ryo**)."
                    )
                    player.coin_balance -= bet
                    final_color = discord.Color.red()
                
                session.commit()

                # C·∫≠p nh·∫≠t cu·ªëi c√πng: Hi·ªÉn th·ªã k·∫øt qu·∫£ ƒë·∫ßy ƒë·ªß
                final_embed = discord.Embed(
                    title="üé∞ K·∫øt qu·∫£ M√°y Slot üé∞",
                    description=(
                        f"**K·∫øt qu·∫£ quay:** {' | '.join(outcome)}\n\n"
                        f"{outcome_text}\n\n"
                        f"üí∞ S·ªë d∆∞ hi·ªán t·∫°i: **{player.coin_balance} Ryo**"
                    ),
                    color=final_color
                )
                await msg.edit(embed=final_embed)

        except Exception as e:
            print("‚ùå L·ªói khi x·ª≠ l√Ω /slot:", e)
            await interaction.followup.send("‚ùå C√≥ l·ªói x·∫£y ra. Vui l√≤ng th·ª≠ l·∫°i sau.")

async def setup(bot):
    await bot.add_cog(Slot(bot))
